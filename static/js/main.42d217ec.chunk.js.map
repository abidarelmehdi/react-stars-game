{"version":3,"sources":["components/functions.js","components/GameHooks.jsx","components/BtnNumber.jsx","components/Stars.jsx","components/PlayAgain.jsx","components/Game.jsx","App.js","index.js"],"names":["sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","Math","floor","useGameState","numbers","useState","stars","setStars","availableNumbers","setAvailableNumbers","condidateNumbers","setCondidateNumbers","timeLeft","setTimeLeft","useEffect","timerId","setTimeout","clearTimeout","setGameState","newCondidateNumbers","newAvailableNumbers","filter","num","includes","sets","sums","j","len","candidateSet","concat","candidateSum","push","randomSumIn","BtnNumber","number","status","onNumberClick","btnClasses","used","available","wrong","condidate","className","type","onClick","Stars","map","star","key","fill","viewBox","fillRule","d","clipRule","PlayAgain","gameStatus","startAgain","role","aria-label","Round","condidatesAreWrong","numberStatus","currentStatus","cn","Game","gameId","setGameId","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42d217ec.chunk.js","sourcesContent":["// Sum an array\nexport const sum = (arr) => arr.reduce((acc, curr) => acc + curr, 0);\n\n// create an array of numbers between min and max (edges included)\nexport const range = (min, max) =>\n  Array.from({ length: max - min + 1 }, (_, i) => min + i);\n\n// pick a random number between min and max (edges included)\nexport const random = (min, max) =>\n  min + Math.floor(Math.random() * (max - min + 1));\n\n// Given an array of numbers and a max...\n// Pick a random sum (< max) from the set of all available sums in arr\nexport const randomSumIn = (arr, max) => {\n  const sets = [[]];\n  const sums = [];\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0, len = sets.length; j < len; j++) {\n      const candidateSet = sets[j].concat(arr[i]);\n      const candidateSum = sum(candidateSet);\n      if (candidateSum <= max) {\n        sets.push(candidateSet);\n        sums.push(candidateSum);\n      }\n    }\n  }\n  return sums[random(0, sums.length - 1)];\n};\n","import { useState, useEffect } from \"react\";\nimport { random, range, sum, randomSumIn } from \"./functions\";\n\nexport default function useGameState(numbers) {\n  const [stars, setStars] = useState(random(1, numbers));\n  const [availableNumbers, setAvailableNumbers] = useState(range(1, numbers));\n  const [condidateNumbers, setCondidateNumbers] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(10);\n\n  useEffect(() => {\n    if (timeLeft > 0 && availableNumbers.length > 0) {\n      const timerId = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  });\n\n  const setGameState = (newCondidateNumbers) => {\n    if (sum(newCondidateNumbers) !== stars) {\n      setCondidateNumbers(newCondidateNumbers);\n    } else {\n      const newAvailableNumbers = availableNumbers.filter(\n        (num) => !newCondidateNumbers.includes(num)\n      );\n      setStars(randomSumIn(newAvailableNumbers, 9));\n      setAvailableNumbers(newAvailableNumbers);\n      setCondidateNumbers([]);\n    }\n  };\n  return {\n    stars,\n    availableNumbers,\n    condidateNumbers,\n    timeLeft,\n    setGameState,\n  };\n}\n","import React from \"react\";\n\nexport default function BtnNumber({ number, status, onNumberClick }) {\n  const colors = {\n    used:\n      \"border-green-300 text-green-700 bg-green-100 hover:text-green-500 active:text-green-800 active:bg-green-50\",\n    available:\n      \"border-gray-300 text-gray-700 bg-white hover:text-gray-500 active:text-gray-800 active:bg-gray-50\",\n    wrong:\n      \"border-red-300 text-red-700 bg-red-100 hover:text-red-500 active:text-red-800 active:bg-red-50\",\n    condidate:\n      \"border-blue-300 text-blue-700 bg-blue-100 hover:text-blue-500 active:text-blue-800 active:bg-blue-50\",\n  };\n\n  let btnClasses = `${colors[status]} px-6 py-3 border text-2xl font-medium rounded-md focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150`;\n  return (\n    <span className=\"inline-block rounded-md shadow-sm m-2\">\n      <button\n        type=\"button\"\n        onClick={() => onNumberClick(number, status)}\n        className={btnClasses}\n      >\n        {number}\n      </button>\n    </span>\n  );\n}\n","import React from \"react\";\nimport { range } from \"./functions\";\n\nexport default function Stars({ stars }) {\n  return range(1, stars).map((star) => (\n    <div key={\"star-\" + star} className=\"px-3 py-2\">\n      <svg\n        fill=\"currentColor\"\n        viewBox=\"0 0 20 20\"\n        className=\"w-14 h-w-14 text-cool-gray-600\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  ));\n}\n","import React from \"react\";\n\nexport default function PlayAgain({ gameStatus, startAgain }) {\n  return (\n    <div>\n      {gameStatus === \"won\" ? (\n        <span className=\"block text-4xl font-medium text-indigo-700\">\n          Nice... You Won{\" \"}\n          <span role=\"img\" aria-label=\"happy\">\n            ðŸ¤—\n          </span>\n        </span>\n      ) : (\n        <span className=\"block text-4xl font-medium text-red-600\">\n          Game Over\n          <span role=\"img\" aria-label=\"confused\">\n            ðŸ˜¯\n          </span>\n        </span>\n      )}\n      <button\n        type=\"button\"\n        onClick={() => startAgain()}\n        className=\"mt-6 px-4 py-2 border border-cool-gray-400 text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-50 focus:outline-none focus:border-indigo-300 focus:shadow-outline-indigo active:bg-indigo-200 transition ease-in-out duration-150\"\n      >\n        Play Again\n      </button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { range, sum } from \"./functions\";\nimport useGameState from \"./GameHooks\";\nimport BtnNumber from \"./BtnNumber\";\nimport Stars from \"./Stars\";\nimport PlayAgain from \"./PlayAgain\";\n\nfunction Round({ startAgain }) {\n  const numbers = 9;\n  const {\n    stars,\n    availableNumbers,\n    condidateNumbers,\n    timeLeft,\n    setGameState,\n  } = useGameState(numbers);\n  const condidatesAreWrong = sum(condidateNumbers) > stars;\n\n  const numberStatus = (number) => {\n    if (!availableNumbers.includes(number)) {\n      return \"used\";\n    }\n    if (condidateNumbers.includes(number)) {\n      return condidatesAreWrong ? \"wrong\" : \"condidate\";\n    }\n    return \"available\";\n  };\n\n  const gameStatus =\n    availableNumbers.length === 0 ? \"won\" : timeLeft === 0 ? \"lost\" : \"active\";\n\n  const onNumberClick = (number, currentStatus) => {\n    if (gameStatus !== \"active\" || currentStatus === \"used\") {\n      return;\n    }\n    const newCondidateNumbers =\n      currentStatus === \"available\"\n        ? condidateNumbers.concat(number)\n        : condidateNumbers.filter((cn) => cn !== number);\n    setGameState(newCondidateNumbers);\n  };\n\n  return (\n    <div className=\"mt-16 flex-inital bg-white border border-gray-300 overflow-hidden shadow-xl rounded-lg\">\n      <div className=\"-ml-4 -mt-2 px-4 py-5 border-b border-gray-300 sm:px-6 flex items-center justify-between flex-wrap sm:flex-no-wrap\">\n        <div className=\"ml-4 mt-2\">\n          <h3 className=\"text-xl leading-6 font-medium text-indigo-600\">\n            Stars Game\n          </h3>\n        </div>\n        <div className=\"ml-4 mt-2 flex-shrink-0\">\n          <h3 className=\"text-xl leading-6 font-medium text-yellow-400\">\n            Time Left: {timeLeft}\n          </h3>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <div className=\"flex flex-wrap items-center justify-center w-72 p-4 bg-cool-gray-100 border-r border-gray-300 text-center\">\n          {gameStatus !== \"active\" ? (\n            <PlayAgain gameStatus={gameStatus} startAgain={startAgain} />\n          ) : (\n            <Stars stars={stars} />\n          )}\n        </div>\n        <div className=\"w-72 p-4 text-center\">\n          {range(1, numbers).map((number) => (\n            <BtnNumber\n              key={`btn-${number}`}\n              status={numberStatus(number)}\n              number={number}\n              onNumberClick={onNumberClick}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function Game() {\n  const [gameId, setGameId] = useState(1);\n  return <Round key={gameId} startAgain={() => setGameId(gameId + 1)} />;\n}\n","import React, { Component } from \"react\";\nimport Game from \"./components/Game\";\nexport class App extends Component {\n  render() {\n    return <Game />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/main.css';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}